name: Semver CI

on:
  push:
    branches: [ main ]
    tags: [ '[0-9]+.[0-9]+.[0-9]+' ]
    paths-ignore:
      - '**.md'

  workflow_dispatch:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macos-latest, ubuntu-latest, windows-latest ]
    steps:
    - uses: actions/checkout@v5
    - name: Set up JDK
      uses: actions/setup-java@v5
      with:
        java-version: 17
        distribution: zulu
    - name: Cache Konan
      uses: ./.github/actions/cache-konan
    - name: Cache Gradle
      uses: ./.github/actions/cache-gradle
    - name: Run all tests
      run: ./gradlew allTests --stacktrace
      shell: bash

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - name: Set up JDK
      uses: actions/setup-java@v5
      with:
        java-version: 17
        distribution: zulu
    - name: Cache Gradle
      uses: ./.github/actions/cache-gradle
    - name: Run format check
      run: ./gradlew ktlintCheck --stacktrace
      shell: bash

  analysis:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - name: Set up JDK
      uses: actions/setup-java@v5
      with:
        java-version: 17
        distribution: zulu
    - name: Cache Konan
      uses: ./.github/actions/cache-konan
    - name: Cache Gradle
      uses: ./.github/actions/cache-gradle
    - name: Run code analysis
      run: ./gradlew detekt --stacktrace
      shell: bash
    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v4
      with:
        sarif_file: build/reports/detekt/detekt.sarif
    - name: Upload analysis report
      uses: actions/upload-artifact@v5
      with:
        name: analysis-report
        path: build/reports/detekt

  coverage:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - name: Set up JDK
      uses: actions/setup-java@v5
      with:
        java-version: 17
        distribution: zulu
    - name: Cache Konan
      uses: ./.github/actions/cache-konan
    - name: Cache Gradle
      uses: ./.github/actions/cache-gradle
    - name: Calculate coverage
      run: ./gradlew koverXmlReport --stacktrace
      shell: bash
    - name: Upload coverage report
      uses: actions/upload-artifact@v5
      with:
        name: coverage-report
        path: build/reports/kover

  assemble:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macos-latest, ubuntu-latest, windows-latest ]
    steps:
    - uses: actions/checkout@v5
    - name: Set up JDK
      uses: actions/setup-java@v5
      with:
        java-version: 17
        distribution: zulu
    - name: Cache Konan
      uses: ./.github/actions/cache-konan
    - name: Cache Gradle
      uses: ./.github/actions/cache-gradle
    - name: Run assemble
      run: ./gradlew assemble --stacktrace
      shell: bash

  upload-reports:
    needs: [ test, lint, analysis, assemble, coverage ]
    runs-on: ubuntu-latest
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      BUILD_NUMBER: ${{ github.run_number }}
    steps:
    - uses: actions/checkout@v5
      with:
        fetch-depth: 0
    - name: Set up JDK
      uses: actions/setup-java@v5
      with:
        java-version: 17
        distribution: zulu
    - name: SonarCloud cache
      uses: actions/cache@v4
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache Konan
      uses: ./.github/actions/cache-konan
    - name: Cache Gradle
      uses: ./.github/actions/cache-gradle
    - name: Download coverage report
      uses: actions/download-artifact@v5
      with:
        name: coverage-report
    - name: Download analysis report
      uses: actions/download-artifact@v5
      with:
        name: analysis-report
    - name: Upload reports to SonarCloud
      run: ./gradlew sonar --stacktrace
      shell: bash

  deploy-snapshot:
    needs: [ test, lint, analysis, assemble, coverage ]
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: macos-latest
    env:
      ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.SONATYPE_USERNAME }}
      ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_PASSWORD }}
      ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.SIGNING_KEY }}
      ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSPHRASE }}
      BUILD_NUMBER: ${{ github.run_number }}
    steps:
    - uses: actions/checkout@v5
    - name: Set up JDK
      uses: actions/setup-java@v5
      with:
        java-version: 17
        distribution: zulu
    - name: Cache Konan
      uses: ./.github/actions/cache-konan
    - name: Cache Gradle
      uses: ./.github/actions/cache-gradle
    - name: Deploy snapshot
      run: ./gradlew publishAllPublicationsToMavenCentralRepository -Dsnapshot=true --stacktrace
      shell: bash

  deploy-release:
    needs: [ test, lint, analysis, assemble, coverage ]
    if: startsWith(github.ref, 'refs/tags')
    runs-on: macos-latest
    env:
      ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.SONATYPE_USERNAME }}
      ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_PASSWORD }}
      ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.SIGNING_KEY }}
      ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSPHRASE }}
      BUILD_NUMBER: ${{ github.run_number }}
    steps:
    - uses: actions/checkout@v5
    - name: Set up JDK
      uses: actions/setup-java@v5
      with:
        java-version: 17
        distribution: zulu
    - name: Cache Konan
      uses: ./.github/actions/cache-konan
    - name: Cache Gradle
      uses: ./.github/actions/cache-gradle
    - name: Deploy release
      run: ./gradlew publishToMavenCentral --stacktrace --no-configuration-cache
      shell: bash

  deploy-gh-pages:
    needs: [ test, lint, analysis, assemble, coverage ]
    if: startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - name: Set up JDK
      uses: actions/setup-java@v5
      with:
        java-version: 17
        distribution: zulu
    - name: Cache Konan
      uses: ./.github/actions/cache-konan
    - name: Cache Gradle
      uses: ./.github/actions/cache-gradle
    - name: Generate HTML docs
      run: ./gradlew buildDocs --stacktrace
      shell: bash
    - name: Deploy docs to GitHub Pages
      uses: JamesIves/github-pages-deploy-action@v4.7.3
      with:
        branch: gh-pages
        folder: build/dokka
